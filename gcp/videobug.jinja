{% import "path_utils.jinja" as path_utils with context %}

{% set project = env["project"] %}
{% set deployment = env["deployment"] %}
{% set accessKey = properties["accessKey"] %}
{% set secretKey = properties["secretKey"] %}
{% set region = properties["region"] %}
{% set name = env["project"] %}
{% set instanceName = "%s-vm" % deployment %}
{% set zone = properties["zone"] %}
{% set machineType = properties["machineType"] %}
{% set networks = [] %}
{% set aerospikeNodes = ["1", "2"] %}
{% set videobugNodes = ["1"] %}
{% set subnetworks = properties["subnetwork"] %}
{% set externalIPs = properties["externalIP"] %}
{% set bootDiskType = properties["bootDiskType"] %}
{% set bootDiskSizeGb = properties["bootDiskSizeGb"] %}

resources:
  - name: videobug-network
    type: compute.v1.network
    properties:
      name: videobug-network
      autoCreateSubnetworks: true
  - name: videobug-subnet
    type: compute.v1.subnetwork
    properties:
      name: videobug-subnet
      network: $(ref.videobug-network.selfLink)
      ipCidrRange: 192.168.1.0/24
      region: {{ region }}
  - name: videobug-server-group
    type: compute.v1.instanceGroup
    properties:
      name: videobug-server-group
      network: $(ref.videobug-network.selfLink)
      subnetwork: $(ref.videobug-subnet.selfLink)
      region: {{ region }}
      zone: {{ zone }}
      namedPorts:
        - name: videobug-server-port
          port: 80
        - name: videobug-server-https
          port: 443
  - name: videobug-router
    type: compute.v1.router
    properties:
      region: {{ region }}
      nats:
        - name: videobug-nat-config
          natIpAllocateOption: AUTO_ONLY
          sourceSubnetworkIpRangesToNat: ALL_SUBNETWORKS_ALL_IP_RANGES
          region: {{ region }}
      network: $(ref.videobug-network.selfLink)
  - name: videobug-firewall
    type: compute.beta.firewall
    properties:
      name: videobug-allow-lb-and-healthcheck
      network: $(ref.videobug-network.selfLink)
      sourceRanges:
        - 130.211.0.0/22
        - 35.191.0.0/16
      allowed:
        - IPProtocol: tcp
          ports:
            - 80
            - 443
  - name: videobug-iap-firewall
    type: compute.beta.firewall
    properties:
      name: videobug-iap-ssh
      network: $(ref.videobug-network.selfLink)
      sourceRanges:
        - 35.235.240.0/20
      allowed:
        - IPProtocol: tcp
          ports:
            - 22
  - name: videobug-aerospike-firewall
    type: compute.beta.firewall
    properties:
      name: videobug-aerospike-ports
      network: $(ref.videobug-network.selfLink)
      sourceRanges:
        - 10.138.0.0/16
      allowed:
        - IPProtocol: tcp
          ports:
            - 3000
            - 3001
            - 3002
            - 3003
{% for node in aerospikeNodes %}
  - name: {{ name }}-aerospike-{{ node }}
    type: compute.v1.instance
    properties:
      instanceName: {{ name }}-aerospike-{{ node }}
      sourceImage: https://www.googleapis.com/compute/v1/projects/{{ project }}/global/images/aerospike-server-image
      zone: {{ zone }}
      machineType: zones/{{ zone }}/machineTypes/e2-medium
      networks:
        - projects/{{ project }}/global/networks/videobug-network
      subnetworks:
        - videobug-subnet
      bootDiskType: projects/{{ project }}/zones/us-west4-b/diskTypes/pd-ssd
      bootDiskSizeGb: 10
      canIpForward: false
      serviceAccounts:
        - email: default
          scopes:
            - 'https://www.googleapis.com/auth/cloud.useraccounts.readonly'
            - 'https://www.googleapis.com/auth/devstorage.read_only'
            - 'https://www.googleapis.com/auth/logging.write'
            - 'https://www.googleapis.com/auth/monitoring.write'
            - 'https://www.googleapis.com/auth/trace.append'
      tags:
        items:
          - {{ env["deployment"] }}-deployment
          - aerospike-server
      networkInterfaces:
      - network: $(ref.videobug-network.selfLink)
        networkIP: 10.138.0.1{{ node }}
      disks:
        - kind: projects/{{ project }}/zones/{{ zone }}/diskTypes/pd-ssd
          boot: true
          autoDelete: true
          diskSizeGb: 10
          description: videobug-aerospike-bootdisk-{{ node }}
          initializeParams:
            diskName: videobug-aerospike-bootdisk-{{ node }}
            diskSizeGb: 10
            sourceImage: https://www.googleapis.com/compute/v1/projects/{{ project }}/global/images/aerospike-server-image
            diskType: projects/{{ project }}/zones/{{ zone }}/diskTypes/pd-ssd
        - kind: projects/{{ project }}/zones/{{ zone }}/diskTypes/pd-ssd
          boot: false
          autoDelete: true
          diskSizeGb: 50
          description: videobug-aerospike-datadisk-{{ node }}
          initializeParams:
            diskName: videobug-aerospike-datadisk-{{ node }}
            diskSizeGb: 50
            diskType: projects/{{ project }}/zones/{{ zone }}/diskTypes/pd-ssd
{% endfor %}
{% for node in videobugNodes %}
  - name: {{ name }}-{{ node }}
    type: compute.v1.instance
    properties:
      instanceName: {{ name }}-{{ node }}
      sourceImage: https://www.googleapis.com/compute/v1/projects/{{ project }}/global/images/videobug-server
      zone: {{ zone }}
      machineType: zones/{{ zone }}/machineTypes/e2-medium
      metadata:
        items:
          - key: startup-script
            value: |
              #!/bin/bash
              snap set videobug-server aerospike-hosts=10.138.0.11:3000
              snap set videobug-server s3-endpoint=https://storage.googleapis.com
              snap set videobug-server s3-bucketname=videobug-state
              snap set videobug-server aerospike-namespace=videobug
              snap set videobug-server s3-access-key={{ accessKey }}
              snap set videobug-server s3-secret-key={{ secretKey }}
      networks:
        - projects/{{ project }}/global/networks/videobug-network
      subnetworks:
        - videobug-subnet
      bootDiskType: projects/{{ project }}/zones/us-west4-b/diskTypes/pd-ssd
      bootDiskSizeGb: 10
      canIpForward: false
      serviceAccounts:
        - email: default
          scopes:
            - 'https://www.googleapis.com/auth/cloud.useraccounts.readonly'
            - 'https://www.googleapis.com/auth/devstorage.read_only'
            - 'https://www.googleapis.com/auth/logging.write'
            - 'https://www.googleapis.com/auth/monitoring.write'
            - 'https://www.googleapis.com/auth/trace.append'
      tags:
        items:
          - {{ env["deployment"] }}-deployment
          - http-tag
          - http-server
          - https-server
      networkInterfaces:
      - network: $(ref.videobug-network.selfLink)
        networkIP: 10.138.0.2{{ node }}
      disks:
        - kind: projects/{{ project }}/zones/{{ zone }}/diskTypes/pd-ssd
          boot: true
          autoDelete: true
          diskSizeGb: 10
          description: videobug-boot-disk-{{ node }}
          initializeParams:
            diskName: videobug-disk-{{ node }}
            diskSizeGb: 10
            sourceImage: https://www.googleapis.com/compute/v1/projects/{{ project }}/global/images/videobug-server
            diskType: projects/{{ project }}/zones/{{ zone }}/diskTypes/pd-ssd
{% endfor %}
  - name: videobug-1-members
    action: gcp-types/compute-v1:compute.instanceGroups.addInstances
    properties:
      project: {{ project }}
      zone: {{ zone }}
      not: $(ref.videobug-server-group.selfLink)
      instanceGroup: $(ref.videobug-server-group.name)
      instances:
      {% for node in videobugNodes %}
        - instance: $(ref.{{ name }}-{{ node }}.selfLink)
      {% endfor %}
  - name: videobug-public-ip
    type: compute.v1.globalAddresses
    properties:
      name: videobug-public-ip
  - name: videobug-healthcheck
    type: compute.v1.healthCheck
    properties:
      checkIntervalSec: 5
      healthyThreshold: 2
      httpHealthCheck:
        host: ''
        port: 80
        proxyHeader: NONE
        requestPath: /
      timeoutSec: 5
      type: HTTP
      unhealthyThreshold: 2
  - name: videobug-backend
    type: compute.v1.backendServices
    properties:
      name: videobug-backend
      portName: videobug-server-port
      protocol: HTTP
      healthChecks:
        - $(ref.videobug-healthcheck.selfLink)
      backends:
        - description: videobug-server-backend
          group: $(ref.videobug-server-group.selfLink)
          balancingMode: UTILIZATION
          maxUtilization: 0.8
  - name: videobug-urlmap
    type: compute.v1.urlMaps
    properties:
      name: videobug-backend
      portName: videobug-server-port
      protocol: HTTP
      defaultService: $(ref.videobug-backend.selfLink)
  - name: videobug-proxy
    type: compute.v1.targetHttpProxies
    properties:
      name: videobug-proxy
      urlMap: $(ref.videobug-urlmap.selfLink)
  - name: videobug-http
    type: compute.v1.globalForwardingRules
    properties:
      name: videobug-http
      IPProtocol: TCP
      ipVersion: IPV4
      loadBalancingScheme: EXTERNAL
      portRange: 80-80
      region: {{ region }}
      target: global/targetHttpProxies/$(ref.videobug-proxy.name)
      not: $(ref.videobug-proxy.selfLink)
  - name: videobug-bucket
    type: storage.v1.bucket
    properties:
      name: videobug-state
outputs:
  - name: deployment
    value: {{ deployment }}
  - name: project
    value: {{ project }}
  - name: mainNetwork
    value: {{ networks[0] }}
